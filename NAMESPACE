export(dynamicsSVM, DNFOptim, modelSim, DNF)

S3method("DNF", "default")
S3method("DNFOptim", "default")
S3method("modelSim", "default")
S3method(DNF, dynamicsSVM)
S3method(DNFOptim, dynamicsSVM)
S3method(modelSim, dynamicsSVM)
S3method(print, dynamicsSVM)
S3method(logLik, SVDNF)
S3method(plot, SVDNF)
S3method(predict, SVDNF)
S3method(print, SVDNF)
S3method(logLik, DNFOptim)
S3method(plot, DNFOptim)
S3method(predict, DNFOptim)
S3method(print, DNFOptim)
S3method(summary, DNFOptim)
S3method(plot, predict.SVDNF)
S3method(plot, predict.DNFOptim)
S3method(print, predict.DNFOptim)
S3method(print, summary.DNFOptim)

import(Rcpp)
importFrom("stats", "dnorm", "dpois", "dunif", "pgamma", "dgamma", "pnorm", "dbinom",
               "rexp", "rnorm", "rpois", "rbinom", "rgamma", "optim", "logLik", "sd", "qnorm")
importFrom("graphics", "plot", "points", "legend", "lines", "segments")
importFrom("methods", "formalArgs")

useDynLib(SVDNF, .registration = TRUE)

